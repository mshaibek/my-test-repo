FROM golang:1.11-alpine

USER root

# Standard packages needed to build
RUN apk add --no-cache bash gawk sed grep bc coreutils gcc g++ musl-dev make jq \
 curl perl openrc docker libffi-dev openssl-dev openssl git

# Python 3, and aws cli boto
RUN apk add --no-cache python3 python3-dev && \
   python3 -m ensurepip && \
   rm -r /usr/lib/python*/ensurepip && \
   pip3 install --upgrade pip setuptools && \
   if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \
   if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
   rm -r /root/.cache \
 && pip3 install --upgrade pip awscli boto3 yq

# grpcurl
RUN mkdir -p /usr/tools/ \
   && curl -sSL https://github.com/fullstorydev/grpcurl/releases/download/v1.3.0/grpcurl_1.3.0_linux_x86_64.tar.gz \
   | tar -xzC /usr/tools/ \
   && chmod +x /usr/tools/grpcurl \
   && cp /usr/tools/grpcurl /bin/grpcurl

# IAM authenticator and kubectl
ADD https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator \
   https://storage.googleapis.com/kubernetes-release/release/v1.12.0/bin/linux/amd64/kubectl \
   /bin/
RUN chmod 755 /bin/aws-iam-authenticator /bin/kubectl

# install protobuf
# ADD - Copies files, directories, or remote URLs from a source location (the VM or a remote location) to the container's file system.
RUN PROTOC_ZIP=protoc-3.6.1-linux-x86_64.zip && curl https://github.com/protocolbuffers/protobuf/releases/download/v3.6.1/$PROTOC_ZIP
ADD $PROTOC_ZIP /usr/local/bin/protoc

# setting go env
ENV GOROOT=/usr/local/go
ENV GOPATH=/go
ENV PATH=$GOPATH/bin:$GOROOT/bin:$GOPATH:$PATH
ENV GO111MODULE=on


# Making the container port accessible to the host
# The docker run command must be provided with a flag that designates the mapping of VM ports to container ports.
EXPOSE 8080

# Install bin tools
COPY tmp/bin/ /usr/local/bin/

# CMD - Provides the default command for executing a container.
CMD ["./deploy_for_Docker.sh" ]
# uncomment below only for debug purpose
# CMD [ "while :; do echo 'Hit Ctrl+C'; sleep 1; done" ]

# Use bash as the container's entry point
ENTRYPOINT ["/bin/bash", "-c"]
